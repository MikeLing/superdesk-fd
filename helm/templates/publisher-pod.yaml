kind: Pod
apiVersion: v1
metadata:
  name: {{ .Values.publisher.name }}
  labels:
    component: {{ .Values.publisher.component }}
spec:
  containers:
    - name: php
      image: {{ .Values.publisher.image }}
      resources:
        limits:
          memory: 7Gi
        requests:
          memory: 7Gi
      ports:
        - containerPort: 9000
      env:
        - name: DATABASE_URL
          value: "pgsql://postgres:postgres@postgres/publisher_%kernel.environment%"
        - name: APP_ENV
          value: "dev"
        - name: APP_DEBUG
          value: "1"
        - name: ELASTICA_HOST
          value: "elasticsearch"
        - name: ELASTICA_PORT
          value: "9200"
        - name: APP_SECRET
          value: "CHANGEME"
        - name: DOCTRINE_CACHE_DRIVER
          value: "memcached"
        - name: SWP_DOMAIN
          value: "publisher"
        - name: SENTRY_DSN
          value: "false"
        - name: MAILER_URL
          value: "smtp://localhost"
        - name: CORS_ALLOW_ORIGIN
          value: "http://192.168.64.6"
        - name: ELASTICA_INDEX_NAME
          value: "swp_index-docker"
        - name: FS_MAIN_ADAPTER
          value: "local_adapter"
        - name: SESSION_MEMCACHED_HOST
          value: "memcached"
        - name: SUPERDESK_SERVERS
          value: "[\"http://192.168.64.6\"]"
        - name: SESSION_MEMCACHED_PORT
          value: "11211"
        - name: SESSION_MEMCACHED_PREFIX
          value: "sess"
        - name: SESSION_MEMCACHED_EXPIRE
          value: "3600"
        - name: RABBIT_MQ_HOST
          value: "rabbitmq"
        - name: RABBIT_MQ_PORT
          value: "5672"
        - name: RABBIT_MQ_USER
          value: "guest"
        - name: RABBIT_MQ_PASSWORD
          value: "guest"
        - name: WEBSOCKET_PORT
          value: "443"
        - name: WEBSOCKET_HOST
          value: "127.0.0.1"
      lifecycle:
        postStart:
          exec:
            command: ["/bin/sh","-c","

cd /var/www/publisher && mkdir /var/www/publisher/var/cache >/dev/null 2>&1;
cd /var/www/publisher && mkdir /var/www/publisher/var/cache/dev >/dev/null 2>&1;
cd /var/www/publisher && chmod 777 -R /var/www/publisher/var/cache/dev/;
cd /var/www/publisher && mkdir /var/www/publisher/var/log >/dev/null 2>&1;
cd /var/www/publisher && chmod 777 /var/www/publisher/var/log/;
cd /var/www/publisher && php /usr/bin/composer dump-autoload;
cd /var/www/publisher && php /usr/bin/composer install;
cd /var/www/publisher && php bin/console doctrine:migrations:migrate --no-interaction;
cd /var/www/publisher && php /usr/bin/composer dump-env dev;
cd /var/www/publisher && sed -i -e \"s|%env(CORS_ALLOW_ORIGIN)%|$CORS_ALLOW_ORIGIN|g\" src/SWP/Bundle/CoreBundle/DependencyInjection/SWPCoreExtension.php;
cd /var/www/publisher && cd fdl-magazine;
npm install gulp;
cd /var/www/publisher && cd fdl-magazine && npm i && gulp;
cd /var/www/publisher && cp -R fdl-magazine/ src/SWP/Bundle/FixturesBundle/Resources/themes/fdl-magazine/;
cd /var/www/publisher && php bin/console swp:theme:install tendev src/SWP/Bundle/FixturesBundle/Resources/themes/fdl-magazine/ -f --activate;
                                                  "]


